name: Release testing channel

on:
  push:
    branches: [ "main" ]
    paths: [ "**.rs", "dashboard/src/**", ".github/workflows/release-testing-channel" ]

  workflow_dispatch:

jobs:
  build-arm64-image:
    name: Build ARM64 product
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build Dashboard
        run: |
          cd dashboard
          npm install -g pnpm
          npm install -g @quasar/cli
          pnpm i
          quasar build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-arm64-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-arm64  

      - name: Build and push ARM64 Version
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm64
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/project-senjuko/conch:testing-arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-amd64-image:
    name: Build AMD64 product
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build Dashboard
        run: |
          cd dashboard
          npm install -g pnpm
          npm install -g @quasar/cli
          pnpm i
          quasar build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-amd64-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-amd64  

      - name: Build and push AMD64 Version
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: true
          provenance: false
          sbom: false
          tags: ghcr.io/project-senjuko/conch:testing-amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache    

  combine-two-images:
    runs-on: ubuntu-latest
    needs:
      - build-arm64-image
      - build-amd64-image
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get regctl
        run: |
          wget -q https://github.com/regclient/regclient/releases/download/v0.4.5/regctl-linux-amd64
          chmod +x regctl-linux-amd64

      - name: Combine two images and push to GHCR
        run: |
          docker manifest create ghcr.io/project-senjuko/conch:testing --amend ghcr.io/project-senjuko/conch:testing-amd64 --amend ghcr.io/project-senjuko/conch:testing-arm64
          docker manifest push ghcr.io/project-senjuko/conch:testing
          ./regctl-linux-amd64 image copy ghcr.io/project-senjuko/conch:testing project-senjuko/conch:testing